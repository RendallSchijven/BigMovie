// brain.rive

+ hey nicky how are you?
- Very feminine

+ hello
- Hi there!

+ [*] how are you [*]
- I'm fine.
- Splendid!
- Couldn't be better!

+ [*] start [*]
- I'm Movie Buff bot! Ask me questions about your favorite movies. Type /help for some example questions.

+ [*] help [*]
- You can ask me questions like:\n
^ /movies\n
^ /actors\n
^ /directors

+ *
- Not sure I got that. Type /help for some example questions.

//Plain SQL questions Dutch

//Question 1
+ wat is de kortste film met het hoogste cijfer
- <call>jdbc SELECT Title FROM Movies WHERE rating > 8.5 AND duration IS NOT NULL ORDER BY duration ASC LIMIT 1;</call>

//Question 2
+ in welk jaar tussen 1990 en nu zijn de meeste films gemaakt met het woord beer in de titel
- <call>jdbc SELECT ReleaseYear as Year FROM Movies where Title LIKE '%beer%' AND ReleaseYear > 1989 AND ReleaseYear < 2019 GROUP BY ReleaseYear ORDER BY COUNT(*) DESC LIMIT 1;</call>

//Question 3
+ in welke films speelt *
- <call>jdbc SELECT Title from Movies, Persons_Movies WHERE Persons_Movies.Person_ID = (SELECT ID FROM Persons WHERE Name LIKE '%<star2>% %<star1>%'); </call>

//Question 4
+ welke regisseur heeft de meeste films gemaakt met *
<call>jdbc </call>

//Question 5
+ welke films was het duurst om te maken
- <call>jdbc SELECT Title from Movies ORDER BY Budget DESC limit 1</call>

//Question 6
+ welke acteur had de langste film carri√®re
- <call>jdbc</call>

//Question 7
+ wat zijn de meest voorkomende genres
-<call>jdbc SELECT g.GenreName AS Genre, COUNT(mg.Genre_ID) AS Movies FROM Movies_Genres AS mg LEFT JOIN Genres AS g ON g.ID = mg.Genre_ID GROUP BY g.ID ORDER BY Movies DESC LIMIT 5; </call>

//Question 8
+ wat is de meest voorkomende genre in _
- <call>jdbc SELECT c.Country AS Country, COUNT(mg.Movie_ID) FROM Movies_Genres AS mg LEFT JOIN Genres AS g ON g.ID = mg.Genre_ID LEFT JOIN Movies_Countries AS mc ON mg.Movie_ID = mc.Movie_ID LEFT JOIN Countries as c ON c.ID = mc.Country_ID GROUP BY Country;</call>

//Question 9
+ waar komen de meeste films vandaan
- <call>jdbc SELECT c.Country, COUNT(mc.Movie_ID) AS Movies FROM Movies_Countries as mc LEFT JOIN Countries AS c ON c.ID = mc.Country_ID GROUP BY Country ORDER BY Movies DESC LIMIT 5; </call>

//Question 10
+ wat zijn de hoogst gewaardeerde films
- <call>jdbc SELECT DISTINCT Title, Rating, Votes FROM `Movies` WHERE Votes > 100000 AND Title NOT LIKE '%(VG)%' ORDER BY Rating DESC, Votes DESC LIMIT 5;</call>

//Question 11
+ wie is de oudst levende acteur
- <call>jdbc SELECT Name FROM Persons WHERE MIN(BirthDay) AND DeathDay IS NULL;


//Plain SQL questions English

//Question 1
+ shortest movie highest rating
- <call>jdbc SELECT Title FROM Movies WHERE rating > 8.5 AND duration IS NOT NULL ORDER BY duration ASC LIMIT 1;</call>

//Question 2
+ in what year between 1990 and 2018 are the most films with the word beer in the title produced
- <call>jdbc SELECT ReleaseYear as Year FROM Movies where Title LIKE '%beer%' AND ReleaseYear > 1989 AND ReleaseYear < 2019 GROUP BY ReleaseYear ORDER BY COUNT(*) DESC LIMIT 1;</call>

//Question 3
+ in which movies does * play
- <call>jdbc SELECT Title from Movies, Persons_Movies WHERE Persons_Movies.Person_ID = (SELECT ID FROM Persons WHERE Name LIKE '%<star2>% %<star1>%'); </call>

//Question 4
+ which director has filmed the most movies with *?
<call>jdbc </call>

            SELECT Name FROM Persons WHERE ID = (SELECT Person_ID, (MAX(COUNT(*)) FROM Person_Movies WHERE Role = 'director' AND Movie_ID = (SELECT Movie_ID FROM Persons_Movies WHERE Person_ID = (SELECT ID FROM Persons WHERE Name LIKE '%carrey% %jim%')))

            SELECT p.Name FROM Persons_Movies AS pm
            LEFT JOIN Persons_Movies AS pmm ON p.ID = pm.Person_ID AND p.Name LIKE '%carrey% %jim%' AND pm.Role = 'actor'
            LEFT JOIN Persons AS p ON pm.Movie_ID = pmm.Movie_ID AND pm.Role = 'director'


//Question 5
+ which movie was the most expensive to create
- <call>jdbc SELECT Title from Movies ORDER BY Budget DESC limit 1</call>

//Question 6
+ which actor has the longest movie career
- <call>jdbc</call>

//Question 7
+ what are the 5 most occuring genres?
-<call>jdbc SELECT g.GenreName AS Genre, COUNT(mg.Genre_ID) AS Movies FROM Movies_Genres AS mg LEFT JOIN Genres AS g ON g.ID = mg.Genre_ID GROUP BY g.ID ORDER BY Movies DESC LIMIT 5; </call>

//Question 8
+ what is the most occuring genre in _
- <call>jdbc SELECT c.Country AS Country, COUNT(mg.Movie_ID) FROM Movies_Genres AS mg LEFT JOIN Genres AS g ON g.ID = mg.Genre_ID LEFT JOIN Movies_Countries AS mc ON mg.Movie_ID = mc.Movie_ID LEFT JOIN Countries as c ON c.ID = mc.Country_ID GROUP BY Country;</call>

//Question 9
+ which 5 countries made the most movies
- <call>jdbc SELECT c.Country, COUNT(mc.Movie_ID) AS Movies FROM Movies_Countries as mc LEFT JOIN Countries AS c ON c.ID = mc.Country_ID GROUP BY Country ORDER BY Movies DESC LIMIT 5; </call>

//Question 10
+ what are the top rated movies?
- <call>jdbc SELECT DISTINCT Title, Rating, Votes FROM `Movies` WHERE Votes > 100000 AND Title NOT LIKE '%(VG)%' ORDER BY Rating DESC, Votes DESC LIMIT 5;</call>

//Question 11
+ who is the oldest living actor
- <call>jdbc SELECT Name FROM Persons WHERE MIN(BirthDay) AND DeathDay IS NULL;

// Visualisation questions
+ ik wil _
-<call>system rscript Chatbot/resources/R/Visualization2.R <star1><call>

// R Questions
+ [*] plot [*]
- There it is!
^ <call>system rscript Chatbot/resources/R/plot.R</call>
^ <call>send photo rplot.jpg The graph produced by R</call>

// Substitutions
! sub i'm     = i am
! sub i'd     = i would
! sub i've    = i have
! sub i'll    = i will
! sub don't   = do not
! sub isn't   = is not
! sub you'd   = you would
! sub you're  = you are
! sub you've  = you have
! sub you'll  = you will
! sub what's  = what is
! sub whats   = what is
! sub what're = what are
! sub what've = what have
! sub what'll = what will
! sub who's   = who is
