// brain.rive

+ hey nicky how are you?
- Very feminine

+ hello
- Hi there!

+ [*] how are you [*]
- I'm fine.
- Splendid!
- Couldn't be better!

+ [*] start [*]
- I'm Movie Buff bot! Ask me questions about your favorite movies. Type /help for some example questions.

+ [*] help [*]
- You can ask me questions like:\n
^ /movies\n
^ /actors\n
^ /directors

+ *
- Not sure I got that. Type /help for some example questions.

//Plain SQL questions
+ what is the shortest movie with a rating higher then 8.5
- <call>jdbc SELECT Title FROM Movies WHERE rating > 8.5 AND duration IS NOT NULL ORDER BY duration ASC LIMIT 1;</call>

+ in what year between 1990 and 2018 are the most films with the word 'beer' in the title produced
- <call>jdbc SELECT ReleaseYear as Year, COUNT(*) as Amount_of_beer
             FROM Movies where Title LIKE '%beer%'
             AND ReleaseYear > 1989 AND ReleaseYear < 2019
             GROUP BY ReleaseYear
             ORDER BY ReleaseYear ASC;</call>

+ in which movies does * play
- <call>jdbc SELECT Title from Movies, Persons_Movies
             WHERE Persons_Movies.Person_ID =
             (SELECT ID FROM Persons WHERE Name LIKE '%<star2>% %<star1>%'); </call>

+ which director has filmed the most movies with *?
<call>jdbc </call>

           SELECT Name FROM Persons WHERE ID = (SELECT Person_ID, (MAX(COUNT(*)) FROM Person_Movies WHERE Role = 'director' AND Movie_ID = (SELECT Movie_ID FROM Persons_Movies WHERE Person_ID = (SELECT ID FROM Persons WHERE Name LIKE '%carrey% %jim%')))

           SELECT DISTINCT Name FROM Persons WHERE ID = (SELECT Person_ID FROM Person_Movies WHERE Role = 'director')
           SELECT pm.Movie_ID FROM Persons_Movies AS pm
           LEFT JOIN Persons_Movies AS pms ON pm.Movie_ID = pms.Movie_ID
                                           AND pm.Person_ID = (SELECT ID FROM Persons WHERE Name LIKE '%carrey% %jim%')
                                           AND pm.Role = 'actor'
                                           AND pms.Role = 'producer'

           SELECT Name FROM Persons WHERE ID = ( SELECT pm.Person_ID as director, pms.Person_ID as actor
                                                 FROM Person_Movies AS PM
                                                 INNER JOIN Person_Movies AS PMS ON pm.Person_ID = pms.ID)
                                                 LIMIT 1

            SELECT p.Name From Persons AS p
            LEFT JOIN Persons_Movies AS pm ON p.ID = pm.Person_ID



+ which movie was the most expensive to create
- <call>jdbc SELECT Title from Movies ORDER BY Budget DESC limit 1</call>

+ which actor has the longest movie career
- <call>jdbc</call>

+ what are the most occuring genres?
- <call>jdbc SELECT g.GenreName AS Genre, COUNT(mg.Genre_ID) AS Movies FROM Movies_Genres AS mg
             LEFT JOIN Genres AS g ON g.ID = mg.Genre_ID
             GROUP BY g.ID
             ORDER BY Movies DESC
             LIMIT 5; </call>


// Visualisation questions
+ ik wil _
-<call>system rscript Chatbot/resources/R/Visualization2.R <star1><call>

// R Questions
+ [*] plot [*]
- There it is! 
^ <call>system rscript Chatbot/resources/R/plot.R</call>
^ <call>send photo rplot.jpg The graph produced by R</call>

// Substitutions
! sub i'm     = i am
! sub i'd     = i would
! sub i've    = i have
! sub i'll    = i will
! sub don't   = do not
! sub isn't   = is not
! sub you'd   = you would
! sub you're  = you are
! sub you've  = you have
! sub you'll  = you will
! sub what's  = what is
! sub whats   = what is
! sub what're = what are
! sub what've = what have
! sub what'll = what will
! sub who's   = who is
